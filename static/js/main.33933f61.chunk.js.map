{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","todoList","setTodoList","setUserId","setTitle","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","onChange","test","target","value","type","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33933f61.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => (\n  user && (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  )\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo : Todo;\n};\n\nexport const TodoInfo:React.FC <Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => {\n      return (\n        <TodoInfo key={todo.id} todo={todo} />\n      );\n    })}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const regex = /^[a-zA-Z0-9а-яА-Я\\s]*$/;\n\n    if (regex.test(event.target.value)) {\n      setTitle(event.target.value);\n      setTitleError(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (userId && title) {\n      const newTodo:Todo = {\n        id: Math.max(...todoList.map(todo => todo.id)) + 1,\n        title: title.trim(),\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setTodoList([...todoList, newTodo]);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            onChange={handleChangeTitle}\n            type=\"text\"\n            id=\"titleInput\"\n            name=\"title\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            onChange={handleUserChange}\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"user\"\n            value={userId || '0'}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}